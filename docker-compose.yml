version: '3.8'

services:
  nginx:
    build:
      context: ./nginx 
    container_name: nginx_server
    ports:
      - "80:80"   # Проброс порта 80 хоста на порт 80 контейнера
      - "443:80"  # Проброс порта 443 хоста на порт 80 контейнера
    volumes:
      - ./src:/var/www/html 
    depends_on:
      - php 
      - db 
    networks:
      - app-network

  php:
    image: php:8.1-fpm-alpine
    container_name: php_fpm
    volumes:
      - ./src:/var/www/html
    expose:
      - 9000
    depends_on:
      - db
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - app-network

  db:
    build:
      context: ./mysql
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # Пароль root
      MYSQL_DATABASE: ${MYSQL_DATABASE}           # База данных для создания
      MYSQL_USER: ${MYSQL_USER}                   # Пользователь для создания
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}           # Пароль для пользователя
    volumes:
      - db_data:/var/lib/mysql 
    expose:
      - 3306
    networks:
      - app-network
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
        interval: 10s
        timeout: 5s
        retries: 5

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin_ui
    ports:
      - "8080:80" # Проброс порта 8080 хоста на порт 80 контейнера
    environment:
      PMA_HOST: db          # Подключение к сервису MySQL с именем 'db'
      PMA_PORT: 3306        # Порт MySQL
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      UPLOAD_LIMIT: 1G 
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local
